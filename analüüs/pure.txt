digraph callgraph {
  "siga.httpClient.do" -> "siga.singleJoiningSlash"
  "siga.httpClient.do" -> "siga.httpClient.authHeaders"
  "siga.client.StartMobileIDSigning" -> "siga.httpClient.do"
  "siga.zipInputStream.flushLocal" -> "siga.zipInputStream.flushBytes"
  "siga.zipInputStream.flushLocal" -> "siga.zipInputStream.flushBytes"
  "siga.zipInputStream.flushLocal" -> "siga.zipInputStream.flushBytes"
  "siga.zipInputStream.Write" -> "siga.zipInputStream.flushLocal"
  "siga.zipInputStream.flushCentral" -> "siga.zipInputStream.flushBytes"
  "siga.zipInputStream.Write" -> "siga.zipInputStream.flushCentral"
  "siga.zipInputStream.flushEOCD" -> "siga.zipInputStream.flushBytes"
  "siga.zipInputStream.Write" -> "siga.zipInputStream.flushEOCD"
  "siga.newClientWithoutStorage" -> "siga.newHTTPClient"
  "siga.NewClient" -> "siga.newClientWithoutStorage"
  "siga.NewClient" -> "siga.newMemStorage"
  "siga.client.FinalizeRemoteSigning" -> "siga.httpClient.do"
  "siga.toHashcode" -> "siga.writeHashcodes"
  "siga.zipDataFile" -> "siga.NewDataFile"
  "siga.toHashcode" -> "siga.zipDataFile"
  "siga.toHashcode" -> "siga.zipCopy"
  "siga.toHashcode" -> "siga.writeHashcodes"
  "siga.ReadDataFile" -> "siga.NewDataFile"
  "siga.client.RequestMobileIDSigningStatus" -> "siga.httpClient.do"
  "siga.client.StartRemoteSigning" -> "siga.httpClient.do"
  "siga.client.closeContainer" -> "siga.httpClient.do"
  "siga.client.closeContainer" -> "siga.dataKey"
  "siga.client.CreateContainer" -> "siga.client.closeContainer"
  "siga.client.CreateContainer" -> "siga.httpClient.do"
  "siga.client.CreateContainer" -> "siga.httpClient.do"
  "siga.client.CreateContainer" -> "siga.dataKey"
  "siga.client.CloseContainer" -> "siga.client.closeContainer"
  "siga.client.CreateContainer" -> "siga.client.CloseContainer"
  "siga.fromHashcode" -> "siga.checkHashcodes"
  "siga.fromHashcode" -> "siga.checkHashcodes"
  "siga.fromHashcode" -> "siga.zipCopy"
  "siga.fromHashcode" -> "siga.zipWrite"
  "siga.client.UploadContainer" -> "siga.toReaderAt"
  "siga.client.UploadContainer" -> "siga.forZipInputStream"
  "siga.client.UploadContainer" -> "siga.toHashcode"
  "siga.client.UploadContainer" -> "siga.client.closeContainer"
  "siga.client.UploadContainer" -> "siga.httpClient.do"
  "siga.client.UploadContainer" -> "siga.httpClient.do"
  "siga.client.UploadContainer" -> "siga.dataKey"
  "siga.client.UploadContainer" -> "siga.client.CloseContainer"
  "siga.client.WriteContainer" -> "siga.httpClient.do"
  "siga.client.WriteContainer" -> "siga.dataKey"
  "siga.client.WriteContainer" -> "siga.fromHashcode"
  "siga.client.WriteContainer" -> "siga.bytesDataFile"
}
