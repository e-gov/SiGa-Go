digraph callgraph {
  "(*github.com/e-gov/SiGa-Go/siga.httpClient).do" -> "github.com/e-gov/SiGa-Go/siga.singleJoiningSlash"
  "(*github.com/e-gov/SiGa-Go/siga.httpClient).do" -> "(*github.com/e-gov/SiGa-Go/siga.httpClient).authHeaders"
  "(*github.com/e-gov/SiGa-Go/siga.client).StartMobileIDSigning" -> "(*github.com/e-gov/SiGa-Go/siga.httpClient).do"
  "(*github.com/e-gov/SiGa-Go/siga.zipInputStream).flushLocal" -> "(*github.com/e-gov/SiGa-Go/siga.zipInputStream).flushBytes"
  "(*github.com/e-gov/SiGa-Go/siga.zipInputStream).flushLocal" -> "(*github.com/e-gov/SiGa-Go/siga.zipInputStream).flushBytes"
  "(*github.com/e-gov/SiGa-Go/siga.zipInputStream).flushLocal" -> "(*github.com/e-gov/SiGa-Go/siga.zipInputStream).flushBytes"
  "(*github.com/e-gov/SiGa-Go/siga.zipInputStream).Write" -> "(*github.com/e-gov/SiGa-Go/siga.zipInputStream).flushLocal"
  "(*github.com/e-gov/SiGa-Go/siga.zipInputStream).flushCentral" -> "(*github.com/e-gov/SiGa-Go/siga.zipInputStream).flushBytes"
  "(*github.com/e-gov/SiGa-Go/siga.zipInputStream).Write" -> "(*github.com/e-gov/SiGa-Go/siga.zipInputStream).flushCentral"
  "(*github.com/e-gov/SiGa-Go/siga.zipInputStream).flushEOCD" -> "(*github.com/e-gov/SiGa-Go/siga.zipInputStream).flushBytes"
  "(*github.com/e-gov/SiGa-Go/siga.zipInputStream).Write" -> "(*github.com/e-gov/SiGa-Go/siga.zipInputStream).flushEOCD"
  "github.com/e-gov/SiGa-Go/siga.newClientWithoutStorage" -> "github.com/e-gov/SiGa-Go/siga.newHTTPClient"
  "github.com/e-gov/SiGa-Go/siga.NewClient" -> "github.com/e-gov/SiGa-Go/siga.newClientWithoutStorage"
  "github.com/e-gov/SiGa-Go/siga.NewClient" -> "github.com/e-gov/SiGa-Go/siga.newMemStorage"
  "(*github.com/e-gov/SiGa-Go/siga.client).FinalizeRemoteSigning" -> "(*github.com/e-gov/SiGa-Go/siga.httpClient).do"
  "github.com/e-gov/SiGa-Go/siga.toHashcode" -> "github.com/e-gov/SiGa-Go/siga.writeHashcodes"
  "github.com/e-gov/SiGa-Go/siga.zipDataFile" -> "github.com/e-gov/SiGa-Go/siga.NewDataFile"
  "github.com/e-gov/SiGa-Go/siga.toHashcode" -> "github.com/e-gov/SiGa-Go/siga.zipDataFile"
  "github.com/e-gov/SiGa-Go/siga.toHashcode" -> "github.com/e-gov/SiGa-Go/siga.zipCopy"
  "github.com/e-gov/SiGa-Go/siga.toHashcode" -> "github.com/e-gov/SiGa-Go/siga.writeHashcodes"
  "github.com/e-gov/SiGa-Go/siga.ReadDataFile" -> "github.com/e-gov/SiGa-Go/siga.NewDataFile"
  "(*github.com/e-gov/SiGa-Go/siga.client).RequestMobileIDSigningStatus" -> "(*github.com/e-gov/SiGa-Go/siga.httpClient).do"
  "(*github.com/e-gov/SiGa-Go/siga.client).StartRemoteSigning" -> "(*github.com/e-gov/SiGa-Go/siga.httpClient).do"
  "(*github.com/e-gov/SiGa-Go/siga.client).closeContainer" -> "(*github.com/e-gov/SiGa-Go/siga.httpClient).do"
  "(*github.com/e-gov/SiGa-Go/siga.client).closeContainer" -> "github.com/e-gov/SiGa-Go/siga.dataKey"
  "(*github.com/e-gov/SiGa-Go/siga.client).CreateContainer" -> "(*github.com/e-gov/SiGa-Go/siga.client).closeContainer"
  "(*github.com/e-gov/SiGa-Go/siga.client).CreateContainer" -> "(*github.com/e-gov/SiGa-Go/siga.httpClient).do"
  "(*github.com/e-gov/SiGa-Go/siga.client).CreateContainer" -> "(*github.com/e-gov/SiGa-Go/siga.httpClient).do"
  "(*github.com/e-gov/SiGa-Go/siga.client).CreateContainer" -> "github.com/e-gov/SiGa-Go/siga.dataKey"
  "(*github.com/e-gov/SiGa-Go/siga.client).CloseContainer" -> "(*github.com/e-gov/SiGa-Go/siga.client).closeContainer"
  "(*github.com/e-gov/SiGa-Go/siga.client).CreateContainer" -> "(*github.com/e-gov/SiGa-Go/siga.client).CloseContainer"
  "github.com/e-gov/SiGa-Go/siga.fromHashcode" -> "github.com/e-gov/SiGa-Go/siga.checkHashcodes"
  "github.com/e-gov/SiGa-Go/siga.fromHashcode" -> "github.com/e-gov/SiGa-Go/siga.checkHashcodes"
  "github.com/e-gov/SiGa-Go/siga.fromHashcode" -> "github.com/e-gov/SiGa-Go/siga.zipCopy"
  "github.com/e-gov/SiGa-Go/siga.fromHashcode" -> "github.com/e-gov/SiGa-Go/siga.zipWrite"
  "(*github.com/e-gov/SiGa-Go/siga.client).UploadContainer" -> "github.com/e-gov/SiGa-Go/siga.toReaderAt"
  "(*github.com/e-gov/SiGa-Go/siga.client).UploadContainer" -> "github.com/e-gov/SiGa-Go/siga.forZipInputStream"
  "(*github.com/e-gov/SiGa-Go/siga.client).UploadContainer" -> "github.com/e-gov/SiGa-Go/siga.toHashcode"
  "(*github.com/e-gov/SiGa-Go/siga.client).UploadContainer" -> "(*github.com/e-gov/SiGa-Go/siga.client).closeContainer"
  "(*github.com/e-gov/SiGa-Go/siga.client).UploadContainer" -> "(*github.com/e-gov/SiGa-Go/siga.httpClient).do"
  "(*github.com/e-gov/SiGa-Go/siga.client).UploadContainer" -> "(*github.com/e-gov/SiGa-Go/siga.httpClient).do"
  "(*github.com/e-gov/SiGa-Go/siga.client).UploadContainer" -> "github.com/e-gov/SiGa-Go/siga.dataKey"
  "(*github.com/e-gov/SiGa-Go/siga.client).UploadContainer" -> "(*github.com/e-gov/SiGa-Go/siga.client).CloseContainer"
  "(*github.com/e-gov/SiGa-Go/siga.client).WriteContainer" -> "(*github.com/e-gov/SiGa-Go/siga.httpClient).do"
  "(*github.com/e-gov/SiGa-Go/siga.client).WriteContainer" -> "github.com/e-gov/SiGa-Go/siga.dataKey"
  "(*github.com/e-gov/SiGa-Go/siga.client).WriteContainer" -> "github.com/e-gov/SiGa-Go/siga.fromHashcode"
  "(*github.com/e-gov/SiGa-Go/siga.client).WriteContainer" -> "github.com/e-gov/SiGa-Go/siga.bytesDataFile"
}
